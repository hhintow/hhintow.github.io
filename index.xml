<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>不二说</title>
    <link>https://hhintow.github.io/</link>
    <description>Recent content on 不二说</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>©2017, S &amp; Q; all rights reserved.</copyright>
    <lastBuildDate>Mon, 09 Jan 2017 21:47:54 -0500</lastBuildDate>
    <atom:link href="https://hhintow.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Airport English Episode Two</title>
      <link>https://hhintow.github.io/post/airport-english-episode-two/</link>
      <pubDate>Mon, 09 Jan 2017 21:47:54 -0500</pubDate>
      
      <guid>https://hhintow.github.io/post/airport-english-episode-two/</guid>
      <description>

&lt;p&gt;You can find recording of this podcast at &lt;a href=&#34;https://www.lizhi.fm/1513920/2578651006379877894&#34;&gt;lizhi.fm&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;words-and-phrases&#34;&gt;Words and phrases&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;A Window Seat 靠窗的座位&lt;/li&gt;
&lt;li&gt;An Aisle Seat 靠过道的座位&lt;/li&gt;
&lt;li&gt;Prefer 偏向于，更喜欢

&lt;ul&gt;
&lt;li&gt;I prefer a window seat. 我更喜欢靠窗的座位。&lt;/li&gt;
&lt;li&gt;I prefer an aisle seat. 我更喜欢靠过道的座位。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;d like 我想要

&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;d like a window seat. 我想要靠窗的座位。&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;d like an aisle seat. 我想要靠过道的座位。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Customs 海关&lt;/li&gt;
&lt;li&gt;Security Check 安检&lt;/li&gt;
&lt;li&gt;Take off 脱下

&lt;ul&gt;
&lt;li&gt;Take off your glasses. 摘掉眼镜。&lt;/li&gt;
&lt;li&gt;Take off your coat / shoes / belt. 脱下外套 ／ 鞋子 ／ 腰带。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Take out 拿出

&lt;ul&gt;
&lt;li&gt;Take out your wallet / keys / laptop / cell phone. 拿出你的钱包 ／ 钥匙 ／ 笔记本电脑 ／ 手机。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;extras&#34;&gt;Extras&lt;/h1&gt;

&lt;p&gt;句型：&lt;code&gt;prefer A to B&lt;/code&gt; 相对于B更喜欢A&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I prefer tea to coffee. 相对于咖啡我更喜欢茶。
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://hhintow.github.io/about/</link>
      <pubDate>Mon, 09 Jan 2017 21:33:31 -0500</pubDate>
      
      <guid>https://hhintow.github.io/about/</guid>
      <description>&lt;p&gt;
&lt;img src=&#34;https://hhintow.github.io/images/profile/self.JPG&#34; alt=&#34;&#34; style=&#34;max-width: 300px; padding-right: 10px&#34; align=&#34;left&#34;&gt;

不2 used to be an English teacher back in China. She loves teaching and wants to propogate knowlege to more people. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Airport English Episode One</title>
      <link>https://hhintow.github.io/post/airport-english-episode-one/</link>
      <pubDate>Sun, 08 Jan 2017 21:47:54 -0500</pubDate>
      
      <guid>https://hhintow.github.io/post/airport-english-episode-one/</guid>
      <description>&lt;p&gt;Podcast of this episode can be found online at &lt;a href=&#34;https://www.lizhi.fm/1513920/2578496578686185478&#34;&gt;lizhi.fm&lt;/a&gt;. Words and corresponding translations mentioned in the original recording:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Airport 机场&lt;/li&gt;
&lt;li&gt;Terminal 航站楼&lt;/li&gt;
&lt;li&gt;Arrival 到达&lt;/li&gt;
&lt;li&gt;Departure 出发&lt;/li&gt;
&lt;li&gt;International 国际&lt;/li&gt;
&lt;li&gt;Domestic 国内&lt;/li&gt;
&lt;li&gt;Domestic Departure ／ Arrival 国内出发 ／ 到达&lt;/li&gt;
&lt;li&gt;International Departure ／ Arrival 国际出发 ／ 到达&lt;/li&gt;
&lt;li&gt;Check-in 办理登机&lt;/li&gt;
&lt;li&gt;Self Check-in 自助办理登机&lt;/li&gt;
&lt;li&gt;Baggage ／ Luggage Drop 托运行李&lt;/li&gt;
&lt;li&gt;Tag （条形码）标签&lt;/li&gt;
&lt;li&gt;Boarding Pass 登机牌&lt;/li&gt;
&lt;li&gt;Passport 护照&lt;/li&gt;
&lt;li&gt;Destination 目的地&lt;/li&gt;
&lt;li&gt;Flight Number 航班号&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The &#34;Playground section&#34;</title>
      <link>https://hhintow.github.io/playground/01-playground/</link>
      <pubDate>Wed, 04 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hhintow.github.io/playground/01-playground/</guid>
      <description>&lt;p&gt;Here you can see the &amp;ldquo;playground&amp;rdquo;-section.
It is used for less important content, wich isnt updated regulary and must not be in a strict structure.
The special thing of this section is the fact, that every article is fully viewable and every article is on the same page (e.g. at &lt;code&gt;/playground/&lt;/code&gt;).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Menus</title>
      <link>https://hhintow.github.io/playground/menus/</link>
      <pubDate>Wed, 14 May 2014 02:36:37 +0000</pubDate>
      
      <guid>https://hhintow.github.io/playground/menus/</guid>
      <description>

&lt;p&gt;Hugo has a simple yet powerful menu system that permits content to be
placed in menus with a good degree of control without a lot of work.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TIP:&lt;/em&gt; If all you want is a simple menu for your sections, see &lt;a href=&#34;#section-menu-for-the-lazy-blogger&#34;&gt;Section Menu for &amp;ldquo;the Lazy Blogger&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some of the features of Hugo Menus:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Place content in one or many menus&lt;/li&gt;
&lt;li&gt;Handle nested menus with unlimited depth&lt;/li&gt;
&lt;li&gt;Create menu entries without being attached to any content&lt;/li&gt;
&lt;li&gt;Distinguish active element (and active branch)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-is-a-menu&#34;&gt;What is a menu?&lt;/h2&gt;

&lt;p&gt;A menu is a named array of menu entries accessible on the site under
&lt;code&gt;.Site.Menus&lt;/code&gt; by name. For example, if I have a menu called &lt;code&gt;main&lt;/code&gt;, I would
access it via &lt;code&gt;.Site.Menus.main&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A menu entry has the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL&lt;/strong&gt;        string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;       string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Menu&lt;/strong&gt;       string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Identifier&lt;/strong&gt; string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pre&lt;/strong&gt;        template.HTML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Post&lt;/strong&gt;       template.HTML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Weight&lt;/strong&gt;     int&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parent&lt;/strong&gt;     string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Children&lt;/strong&gt;   Menu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the following functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HasChildren&lt;/strong&gt; bool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, there are some relevant functions available on the page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IsMenuCurrent&lt;/strong&gt; (menu string, menuEntry *MenuEntry ) bool&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HasMenuCurrent&lt;/strong&gt; (menu string, menuEntry *MenuEntry) bool&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;adding-content-to-menus&#34;&gt;Adding content to menus&lt;/h2&gt;

&lt;p&gt;Hugo supports a couple of different methods of adding a piece of content
to the front matter.&lt;/p&gt;

&lt;h3 id=&#34;simple&#34;&gt;Simple&lt;/h3&gt;

&lt;p&gt;If all you need to do is add an entry to a menu, the simple form works
well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A single menu:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
menu: &amp;quot;main&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Multiple menus:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
menu: [&amp;quot;main&amp;quot;, &amp;quot;footer&amp;quot;]
---
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;advanced&#34;&gt;Advanced&lt;/h3&gt;

&lt;p&gt;If more control is required, then the advanced approach gives you the
control you want. All of the menu entry properties listed above are
available.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
menu:
  main:
    parent: &#39;extras&#39;
    weight: 20
---
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;adding-non-content-entries-to-a-menu&#34;&gt;Adding (non-content) entries to a menu&lt;/h2&gt;

&lt;p&gt;You can also add entries to menus that aren’t attached to a piece of
content. This takes place in the sitewide &lt;a href=&#34;https://hhintow.github.io/overview/configuration/&#34;&gt;config file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s an example &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
    name = &amp;quot;about hugo&amp;quot;
    pre = &amp;quot;&amp;lt;i class=&#39;fa fa-heart&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot;
    weight = -110
    identifier = &amp;quot;about&amp;quot;
    url = &amp;quot;/about/&amp;quot;
[[menu.main]]
    name = &amp;quot;getting started&amp;quot;
    pre = &amp;quot;&amp;lt;i class=&#39;fa fa-road&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot;
    weight = -100
    url = &amp;quot;/getting-started/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the equivalent example &lt;code&gt;config.yaml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
menu:
  main:
      - Name: &amp;quot;about hugo&amp;quot;
        Pre: &amp;quot;&amp;lt;i class=&#39;fa fa-heart&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot;
        Weight: -110
        Identifier: &amp;quot;about&amp;quot;
        URL: &amp;quot;/about/&amp;quot;
      - Name: &amp;quot;getting started&amp;quot;
        Pre: &amp;quot;&amp;lt;i class=&#39;fa fa-road&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot;
        Weight: -100
        URL: &amp;quot;/getting-started/&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The URLs must be relative to the context root. If the &lt;code&gt;BaseURL&lt;/code&gt; is &lt;code&gt;http://example.com/mysite/&lt;/code&gt;, then the URLs in the menu must not include the context root &lt;code&gt;mysite&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;nesting&#34;&gt;Nesting&lt;/h2&gt;

&lt;p&gt;All nesting of content is done via the &lt;code&gt;parent&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;The parent of an entry should be the identifier of another entry.
Identifier should be unique (within a menu).&lt;/p&gt;

&lt;p&gt;The following order is used to determine identity Identifier &amp;gt; Name &amp;gt;
LinkTitle &amp;gt; Title. This means that the title will be used unless
linktitle is present, etc. In practice Name and Identifier are never
displayed and only used to structure relationships.&lt;/p&gt;

&lt;p&gt;In this example, the top level of the menu is defined in the config file
and all content entries are attached to one of these entries via the
&lt;code&gt;parent&lt;/code&gt; field.&lt;/p&gt;

&lt;h2 id=&#34;rendering-menus&#34;&gt;Rendering menus&lt;/h2&gt;

&lt;p&gt;Hugo makes no assumptions about how your rendered HTML will be
structured. Instead, it provides all of the functions you will need to be
able to build your menu however you want.&lt;/p&gt;

&lt;p&gt;The following is an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!--sidebar start--&amp;gt;
&amp;lt;aside&amp;gt;
    &amp;lt;div id=&amp;quot;sidebar&amp;quot; class=&amp;quot;nav-collapse&amp;quot;&amp;gt;
        &amp;lt;!-- sidebar menu start--&amp;gt;
        &amp;lt;ul class=&amp;quot;sidebar-menu&amp;quot;&amp;gt;
          {{ $currentNode := . }}
          {{ range .Site.Menus.main }}
              {{ if .HasChildren }}

            &amp;lt;li class=&amp;quot;sub-menu{{if $currentNode.HasMenuCurrent &amp;quot;main&amp;quot; . }} active{{end}}&amp;quot;&amp;gt;
            &amp;lt;a href=&amp;quot;javascript:;&amp;quot; class=&amp;quot;&amp;quot;&amp;gt;
                {{ .Pre }}
                &amp;lt;span&amp;gt;{{ .Name }}&amp;lt;/span&amp;gt;
                &amp;lt;span class=&amp;quot;menu-arrow arrow_carrot-right&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;sub&amp;quot;&amp;gt;
                {{ range .Children }}
                &amp;lt;li{{if $currentNode.IsMenuCurrent &amp;quot;main&amp;quot; . }} class=&amp;quot;active&amp;quot;{{end}}&amp;gt;&amp;lt;a href=&amp;quot;{{.URL}}&amp;quot;&amp;gt; {{ .Name }} &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                {{ end }}
            &amp;lt;/ul&amp;gt;
          {{else}}
            &amp;lt;li&amp;gt;
            &amp;lt;a class=&amp;quot;&amp;quot; href=&amp;quot;{{.URL}}&amp;quot;&amp;gt;
                {{ .Pre }}
                &amp;lt;span&amp;gt;{{ .Name }}&amp;lt;/span&amp;gt;
            &amp;lt;/a&amp;gt;
          {{end}}
          &amp;lt;/li&amp;gt;
          {{end}}
            &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;https://github.com/spf13/hugo/issues&amp;quot; target=&amp;quot;blank&amp;quot;&amp;gt;Questions and Issues&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot; target=&amp;quot;blank&amp;quot;&amp;gt;Edit this Page&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
        &amp;lt;!-- sidebar menu end--&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/aside&amp;gt;
&amp;lt;!--sidebar end--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;section-menu-for-the-lazy-blogger&#34;&gt;Section Menu for &amp;ldquo;the Lazy Blogger&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;To enable this menu, add this to your site config, i.e. &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SectionPagesMenu = &amp;quot;main&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The menu name can be anything, but take a note of what it is.&lt;/p&gt;

&lt;p&gt;This will create a menu with all the sections as menu items and all the sections&amp;rsquo; pages as &amp;ldquo;shadow-members&amp;rdquo;. The &lt;em&gt;shadow&lt;/em&gt; implies that the pages isn&amp;rsquo;t represented by a menu-item themselves, but this enables you to create a top-level menu like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;nav class=&amp;quot;sidebar-nav&amp;quot;&amp;gt;
        {{ $currentNode := . }}
        {{ range .Site.Menus.main }}
        &amp;lt;a class=&amp;quot;sidebar-nav-item{{if or ($currentNode.IsMenuCurrent &amp;quot;main&amp;quot; .) ($currentNode.HasMenuCurrent &amp;quot;main&amp;quot; .) }} active{{end}}&amp;quot; href=&amp;quot;{{.URL}}&amp;quot;&amp;gt;{{ .Name }}&amp;lt;/a&amp;gt;
        {{ end }}
    &amp;lt;/nav&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above, the menu item is marked as active if on the current section&amp;rsquo;s list page or on a page in that section.&lt;/p&gt;

&lt;p&gt;The above is all that&amp;rsquo;s needed. But if you want custom menu items, e.g. changing weight or name, you can define them manually in the site config, i.e. &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; [[menu.main]]
        name = &amp;quot;This is the blog section&amp;quot;
        weight = -110
        identifier = &amp;quot;blog&amp;quot;
        url = &amp;quot;/blog/&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that the &lt;code&gt;identifier&lt;/code&gt; must match the section name.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>